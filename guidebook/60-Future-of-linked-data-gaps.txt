

Trends and gaps

	"A funny thing happened on the way to the forum."

Two recent professional meetings have taught me that — when creating some sort of information service — linked data will reside and be mixed in with data collected from any number of Internet techniques. Linked data interfaces will coexist with REST-ful interfaces, or even things as rudimentary as FTP. To the archivist, this means linked data is not the be-all and end-all of information publishing. There is no such thing. To the application programmer, this means you will need to have experience with a ever-growing number of Internet protocols. To both it means, "There is more than one way to get there."

In October of 2013 I had the opportunity to attend the Semantic Web In Libraries conference.   It was a three-day event attended by approximately three hundred people who could roughly be divided into two equally sized groups: computer scientists and cultural heritage institution employees. The bulk of the presentations fell into two categories: 1) publishing linked data, and 2) creating information services. The publishers talked about ontologies, human-computer interfaces for data creation/maintenance, and systems exposing RDF to the wider world. The people creating information services were invariably collecting, homogenizing, and adding value to data gathered from a diverse set of information services. These information services were not limited to sets of linked data. They also included services accessible via REST-ful computing techniques, OAI-PMH interfaces, and there were probably a few locally developed file transfers or relational database dumps described as well. These people where creating lists of information services, regularly harvesting content from the services, writing cross-walks, locally storing the content, indexing it, providing services against the result, and sometimes republishing any number of "stories" based on the data. For the second group of people, linked data was certainly not the only game in town.

In February of 2014 I had the opportunity to attend a hackathon called GLAM Hack Philly.  A wide variety of data sets were presented for "hacking" against. Some where TEI files describing Icelandic manuscripts. Some was linked data published from the British museum. Some was XML describing digitized journals created by a vendor-based application. Some of it resided in proprietary database applications describing the location of houses in Philadelphia. Some of it had little or no computer-readable structure at all and described plants. Some of it was the wiki mark-up for local municipalities. After the attendees (there were about two dozen of us) learned about each of the data sets we self-selected and hacked away at projects of our own design. The results fell into roughly three categories: geo-referencing objects, creating searchable/browsable interfaces, and data enhancement. With the exception of the resulting hack repurposing journal content to create new art, the results were pretty typical for cultural heritage institutions. But what fascinated me was way us hackers selected our data sets. Namely, the more complete and well-structured the data was the more hackers gravitated towards it. Of all the data sets, the TEI files were the most complete, accurate, and computer-readable. Three or four projects were done against the TEI. (Heck, I even hacked on the TEI files.) The linked data from the British Museum — very well structured but not quite as through at the TEI — attracted a large number of hackers who worked together for a common goal. All the other data sets had only one or two people working on them. What is the moral to the story? There are two of them. First, archivists, if you want people to process your data and do "kewl" things against it, then make sure the data is thorough, complete, and computer-readable. Second, computer programmers, you will need to know a variety of data formats. Linked data is not the only game in town.

In summary, the technologies described in this Guidebook are not the only way to accomplish the goals of archivists wishing to make their content more accessible. Instead, linked data is just one of many protocols in the toolbox. It is open, standards-based, and simpler rather than more complex. On the other hand, other protocols exist which have a different set of strengths and weaknesses. Computer technologists will need to have a larger rather than smaller knowledge of various Internet tools. For archivists, the core of the problem is still the collection and description of content. This — a what of archival practice — continues to remain constant. It is the how of archival practice — the technology — that changes at a much faster pace.

With great interest I read the Spring/Summer issue of Information Standards Quarterly entitled "Linked Data in Libraries, Archives, and Museums" where there were a number of articles pertaining to linked data in cultural heritage institutions. [1] Of particular interest to me where the various loosely enumerated challenges of linked data. Some of them included:

  * the apparent Tower Of Babel when it comes to vocabularies used
	to describe content, and the same time we need to have "ontology
	mindfulness".

  * dirty, inconsistent, or wide varieties of data integrity

  * persistent URIs

  * the "chicken & egg" problem of why linked data if there is no
	killer application

There are a number of challenges in the linked data process. Some of them are listed below, and some of them have been alluded to previously. Create useful linked data, meaning, create linked that links to other linked data. Linked data does not live in a world by itself. Remember, the "L" stands for "linked". For example, try to include URIs that are the URIs used on other linked data sets. Sometimes this is not possible, for example, with the names of people in archival materials. When possible, they used VIAF, but other times they needed to create their own URI denoting an individual. There is a level of rigor involved in creating the data model, and there may be many discussions regarding semantics. For example, what is a creator? Or, when is a term intended to be an index term as opposed reference. When does one term in one vocabulary equal a different term in a different vocabulary? nBalance the creation of your own vocabulary with the need to speak the language of others using their vocabulary. Consider "fixing" the data as it comes in or goes out because it might not be consistent nor thorough. Provenance is an issue. People — especially scholars — will want to know where the LOD came from and whether or not it is authoritative. How to solve or address this problem? The jury is still out on this one. Creating and maintaining linked data is difficult because it requires the skills of a number of different types of people. Computer programmers. Database designers. Subject experts. Metadata specialists. Archivists. Etc. A team is all but necessary.

Linked data represents a modern way of making your archival descriptions accessible to the wider world. In that light, it represents a different way of doing things but not necessary a different what of doing things. You will still be doing inventory. You will still be curating collections. You will still be prioritizing what goes and what stays.

Linked data changes the way your descriptions get expressed and distributed. It is a lot like taking a trip across country. The goal was always to get to the coast to see the ocean, but instead of walking, going by stage coach, taking a train, or driving a car, you will be flying. Along the way you may visit a few cities and have a few layovers. Bad weather may even get in the way, but sooner or later you will get to your destination. Take a deep breath. Understand that the process will be one of learning, and that learning will be applicable in other aspects of your work. The result will be two-fold. First, a greater number of people will have access to your collections, and consequently, more people will will be using your collections. 


Gaps

Linked data makes a lot of sense, but there are some personnel and technological gaps needing to be filled in before it can really and truly be widely adopted by archives (or libraries or museums). They include but are not limited to: hands-on training, "string2URI" tools, mass RDF editors, database to RDF interfaces, and maybe "the killer app". 
 

Hands-on training

Different people learn in different ways, and hands-on training on what linked data is and how it can be put into practice would go a long way towards the adoption of linked data in archives. These hands-on sessions could be as short as an hour or as long as one or two days. They would include a mixture of conceptual and technological topics. For example, there could be a tutorial on how to search RDF triple stores using SPARQL. Another tutorial could compare & contrast the data models of databases with the RDF data model. A class could be facilitated on how to transform XML files (MARCXML, MODS, EAD) in any number of RDF serializations and publish the result on a Web server. There could be a class on how to design URIs. A class on how to literally draw an RDF ontology would be a good idea. Another class would instruct people on how to formally read & write an ontology using OWL. Yet another hands-on workshop would demonstrate to participants the techniques for creating, maintaining, and publishing an RDF triple store. Etc. Linked data might be a "good thing", but people are going to need to learn how to work directly with it in one way or another. These hands-on trainings could be aligned with hack-a-thons, hack-fests, or THATCamps so a mixture of archivists, metadata specialists, and computer programmers would be in the same spaces at the same times.


"string2URI"

There is a need for tools enabling people and computers to automatically associate string literals with URIs. If nobody (or relatively) few people share URIs across their published linked data, then the promise of linked data won't come to fruition. Archivists (and librarians and people who work in museums) take things like controlled vocabularies and named authority lists very seriously. Identifying the "best" URI for a given thing, subject term, or personal name is something the profession is going to want to do and do well. Fabian Steeg and Pascal Christoph at the 2013 Semantic Web in Libraries conference asked the question, "How can we benefit from linked data without being linked data experts?" Their solution was the creation of a set of tools enabling people to query a remote service and get back a list of URIs which were automatically inserted into a text. This is an example of a "string2URI" tool that needs to be written and widely adopted. These tools could be as simple as a one-box, one-button thing where a person enters a word for phrase and one or more URIs are returned for selection. A slightly more complicated version would include a drop-down menu allowing the person to select places to query for the URI. Another application suggested by quite a number of people would use natural language to first extract named entities (people, places, things, etc.) from texts (like abstracts, scope notes, biographical histories, etc.). Once these entities are extracted, they would then be fed to "string2URI". The LC Linked Data Service, VIAF, and Worldcat are very good examples of these sorts of tools. [2, 3, 4] The profession needs more of them. SNAC's use of EAC-CPF is a something to watch. [5]


Mass RDF editors

  * the creation of a mass RDF statement editor - A "real" RDF editing tool is a gap. There needs to be easy to use tools to find URIs and insert them in to archival descriptions. 


Database to RDF publishing systems

  * A [insert your favorite tool here] to RDF application be written - to RDF publishing system tool to a gap - Write "add-ons" to existing systems that output to CIDOC Conceptual Reference Model (CRM)


The "killer" application

  * the killer app / additional demonstration applications - hack-a-thons;  Mash ups;   * Harvesting along side other protocols;   * Using them to enhance online catalogs;  * Creating timelines
  * Creating "named graphs"


Links

[1] Linked Data in Libraries, Archives, and Museums - http://www.niso.org/publications/isq/2012/v24no2-3/
[2] LC Linked Data Service - http://id.loc.gov
[3] VIAF - http://viaf.org
[4] Worldcat - http://www.worldcat.org
[5] SNAC - http://socialarchive.iath.virginia.edu

